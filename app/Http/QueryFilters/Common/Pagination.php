<?php


namespace App\Http\QueryFilters\Common;

use Illuminate\Contracts\Foundation\Application;
use Illuminate\Contracts\Pagination\LengthAwarePaginator;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Http\Request;

class Pagination extends Filter
{

    public static function apply(Builder $builder)
    {
        return (new static)->applyFilters($builder);
    }

    /**
     * @param Builder $builder
     * @return LengthAwarePaginator
     */
    protected function applyFilters(Builder $builder): LengthAwarePaginator
    {
        return $builder->paginate($this->getPagination());
    }

    /**
     * @return string
     */
    protected function filterName(): string
    {
        return 'per_page'; // TODO: Change the autogenerated stub
    }

    /**
     * @return bool
     */
    public function isRequired(): bool
    {
        return true;
    }

    /**
     * @return int
     */
    public function defaultPagination(): int
    {
        // config('app.default_app_pagination')
        return 100;
    }

    /**
     * @return array|Application|Request|int|string
     */
    public function getPagination()
    {
        if ($this->isExists() && is_int((int)$this->filterValue())) {

            $maxPagination = 500;

            if ($this->filterValue() > $maxPagination) {
                return $maxPagination;
            }
            return $this->filterValue();
        }

        return $this->defaultPagination();
    }


}
